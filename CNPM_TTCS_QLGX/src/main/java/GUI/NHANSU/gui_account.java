/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.NHANSU;

import Annotation.LogConfirm;
import Annotation.LogMessage;
import DAO.AccountDAO;
import DAO.RoleDAO;
import DatabaseHelper.OpenConnection;
import GUI.ViewMain;
import Model.Account;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.security.MessageDigest;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author eramisme
 */
public class gui_account extends javax.swing.JPanel {

    private DefaultTableModel tableModel;
    private ViewMain viewmain;
    private LogConfirm logConfirm;
    private LogMessage logMessage;
    private boolean isUpdating = false;

    /**
     * Creates new form gui_staff
     */
    public gui_account(ViewMain viewmain) {
        this.viewmain = viewmain;
        this.logConfirm = logConfirm;
        this.logMessage = logMessage;
        initComponents();
        btnLuu.setEnabled(false);
        btnHuy.setEnabled(false);
        combobox_Vaitro.removeAllItems();
        combobox_Trangthai.removeAllItems();
        tableModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
        }
        };
        initTable();
        fillTable();
    }    
    public void initTable() {
        String[] header = new String[] {"Số tài khoản", "Vai trò", "Trạng thái"};
        tableModel.setColumnIdentifiers(header);
        Table_Account.setModel(tableModel);
    }
    
    public void fillTable() {
    String sql = "EXEC Account_render";
    try (
        Connection conn = OpenConnection.getConnection();
        Statement stmt = conn.createStatement();
        ResultSet result = stmt.executeQuery(sql);
    ) {
        tableModel.setRowCount(0); 
        while (result.next()) {
            int account_number = result.getInt("account_number");
            String role_name = result.getString("role_name");
            boolean is_active = result.getBoolean("is_active");           

            tableModel.addRow(new Object[]{
                account_number,
                role_name,
                is_active ? "Hoạt động" : "Không hoạt động",                
            });
        }
        tableModel.fireTableDataChanged();
    } catch (Exception e) {
        e.printStackTrace();
    }
    
    Table_Account.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseClicked(MouseEvent e) {
            int selectedRow = Table_Account.getSelectedRow();
            if (selectedRow >= 0) {
                int accountNumber = Integer.parseInt(Table_Account.getValueAt(selectedRow, 0).toString());
                txt_Taikhoan.setText(String.valueOf(accountNumber));
                txt_Matkhau.setText("");
                combobox_Vaitro.setSelectedItem(Table_Account.getValueAt(selectedRow, 1).toString());
                combobox_Trangthai.setSelectedItem(Table_Account.getValueAt(selectedRow, 2).toString());                
            }
        }
        
    });


}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel_TT = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_Taikhoan = new javax.swing.JTextField();
        txt_Matkhau = new javax.swing.JTextField();
        btnLammoiTT = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        combobox_Trangthai = new javax.swing.JComboBox<>();
        btnHuy = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        combobox_Vaitro = new javax.swing.JComboBox<>();
        Panel_TKCN = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txt_Timkiem = new javax.swing.JTextField();
        btnLammoi = new javax.swing.JButton();
        btnTim = new javax.swing.JButton();
        Panel_DS = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table_Account = new javax.swing.JTable();
        Combobox_Trangthai = new javax.swing.JComboBox<>();
        btnload = new javax.swing.JButton();
        Panel_TKCN1 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnCapnhat = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 255));

        Panel_TT.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("THÔNG TIN TÀI KHOẢN");

        jLabel2.setText("Vai trò");

        jLabel3.setText("Số tài khoản");

        jLabel4.setText("Mật khẩu");

        txt_Matkhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_MatkhauActionPerformed(evt);
            }
        });

        btnLammoiTT.setText("Làm mới");
        btnLammoiTT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLammoiTTMouseClicked(evt);
            }
        });
        btnLammoiTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLammoiTTActionPerformed(evt);
            }
        });

        jLabel15.setText("Trạng thái");

        combobox_Trangthai.setEditable(true);
        combobox_Trangthai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hoạt động", "Không hoạt động", " ", " " }));

        btnHuy.setText("Hủy");
        btnHuy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHuyMouseClicked(evt);
            }
        });
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        btnLuu.setText("Lưu");
        btnLuu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLuuMouseClicked(evt);
            }
        });
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        combobox_Vaitro.setEditable(true);
        combobox_Vaitro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Manager Staff In", "Manager Staff Out", "Staff In", "Staff Out", " " }));

        javax.swing.GroupLayout Panel_TTLayout = new javax.swing.GroupLayout(Panel_TT);
        Panel_TT.setLayout(Panel_TTLayout);
        Panel_TTLayout.setHorizontalGroup(
            Panel_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_TTLayout.createSequentialGroup()
                .addGroup(Panel_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Panel_TTLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(Panel_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addGroup(Panel_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_Taikhoan)
                            .addComponent(txt_Matkhau)
                            .addComponent(combobox_Trangthai, 0, 238, Short.MAX_VALUE)
                            .addComponent(combobox_Vaitro, 0, 238, Short.MAX_VALUE)))
                    .addGroup(Panel_TTLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLuu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnHuy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLammoiTT)))
                .addGap(20, 20, 20))
            .addGroup(Panel_TTLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Panel_TTLayout.setVerticalGroup(
            Panel_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_TTLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(Panel_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Taikhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(Panel_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_Matkhau, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Panel_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(combobox_Vaitro, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Panel_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combobox_Trangthai, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addGroup(Panel_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLammoiTT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Panel_TKCN.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("TÌM KIẾM");

        txt_Timkiem.setToolTipText("");
        txt_Timkiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_TimkiemKeyPressed(evt);
            }
        });

        btnLammoi.setText("Làm mới");
        btnLammoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLammoiMouseClicked(evt);
            }
        });
        btnLammoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLammoiActionPerformed(evt);
            }
        });

        btnTim.setText("Tìm");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_TKCNLayout = new javax.swing.GroupLayout(Panel_TKCN);
        Panel_TKCN.setLayout(Panel_TKCNLayout);
        Panel_TKCNLayout.setHorizontalGroup(
            Panel_TKCNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_TKCNLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_TKCNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_TKCNLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(txt_Timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnTim)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLammoi))
                    .addComponent(jLabel10))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        Panel_TKCNLayout.setVerticalGroup(
            Panel_TKCNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_TKCNLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_TKCNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLammoi, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        Panel_DS.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("DANH SÁCH TÀI KHOẢN");

        Table_Account.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Số tài khoản", "Vai trò", "Trạng thái"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Table_Account);

        Combobox_Trangthai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Hoạt động", "Không hoạt động" }));
        Combobox_Trangthai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Combobox_TrangthaiActionPerformed(evt);
            }
        });

        btnload.setText("Tải lại");
        btnload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnloadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_DSLayout = new javax.swing.GroupLayout(Panel_DS);
        Panel_DS.setLayout(Panel_DSLayout);
        Panel_DSLayout.setHorizontalGroup(
            Panel_DSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_DSLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_DSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_DSLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnload)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Combobox_Trangthai, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 643, Short.MAX_VALUE))
                .addContainerGap())
        );
        Panel_DSLayout.setVerticalGroup(
            Panel_DSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_DSLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_DSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(Panel_DSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(btnload, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Combobox_Trangthai))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Panel_TKCN1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel17.setText("CHỨC NĂNG");

        btnThem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThemMouseClicked(evt);
            }
        });
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnXoaMouseClicked(evt);
            }
        });
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnCapnhat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCapnhat.setText("Sửa");
        btnCapnhat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCapnhatMouseClicked(evt);
            }
        });
        btnCapnhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapnhatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_TKCN1Layout = new javax.swing.GroupLayout(Panel_TKCN1);
        Panel_TKCN1.setLayout(Panel_TKCN1Layout);
        Panel_TKCN1Layout.setHorizontalGroup(
            Panel_TKCN1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_TKCN1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addContainerGap(365, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_TKCN1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCapnhat, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        Panel_TKCN1Layout.setVerticalGroup(
            Panel_TKCN1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_TKCN1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Panel_TKCN1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCapnhat)
                    .addComponent(btnThem))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Panel_DS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Panel_TKCN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Panel_TT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Panel_TKCN1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Panel_TKCN, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Panel_TT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Panel_TKCN1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Panel_DS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLammoiTTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLammoiTTMouseClicked
//        resetAllValue();
    }//GEN-LAST:event_btnLammoiTTMouseClicked

    private void txt_TimkiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_TimkiemKeyPressed

    }//GEN-LAST:event_txt_TimkiemKeyPressed

    private void btnXoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnXoaMouseClicked

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int selectedRow = Table_Account.getSelectedRow();
        if (selectedRow == -1) {
            log_message("Vui lòng chọn tài khoản!");
            return;
        }

        String trangThai = Table_Account.getValueAt(selectedRow, 2).toString().trim();
        if (trangThai.equalsIgnoreCase("Hoạt động")) {
            log_message("Không thể xóa");
            return;
        }
        int account_number = Integer.parseInt(Table_Account.getValueAt(selectedRow, 0).toString());

        logConfirm = new LogConfirm("Xác nhận xóa?") {
            @Override
            public void action() {
                setVisible(false);
                viewmain.setEnabled(true);
                if (AccountDAO.getInstance().delete(account_number)) {
                    log_message("Xóa thành công!");
                    loadTable();
                    ResetThongTin();
                } else {
                    log_message("Xóa thất bại!");
                }
            }

            @Override
            public void reject() {
                setVisible(false);
                viewmain.setEnabled(true);
            }
        };
        logConfirm.setLocationRelativeTo(null);
        logConfirm.setVisible(true);
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLammoiTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLammoiTTActionPerformed
        // TODO add your handling code here:
        ResetThongTin();
        Table_Account.clearSelection();
    }//GEN-LAST:event_btnLammoiTTActionPerformed

    private void btnLammoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLammoiMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLammoiMouseClicked

    private void btnLammoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLammoiActionPerformed
        // TODO add your handling code here:
        txt_Timkiem.setText("");
        SearchFilter();
    }//GEN-LAST:event_btnLammoiActionPerformed

    private void txt_MatkhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_MatkhauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_MatkhauActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
           int max = 0;
           for (int i = 0; i < Table_Account.getRowCount(); i++) {
               Object value = Table_Account.getValueAt(i, 0);
               if (value != null) {
                   String str = value.toString().trim();
                   if (!str.isEmpty() && str.matches("\\d+")) {
                       int soTK = Integer.parseInt(str);
                       if (soTK > max) {
                           max = soTK;
                       }
                   }
               }
           }
           int soTaiKhoanMoi = max + 1;

           txt_Taikhoan.setText(String.valueOf(soTaiKhoanMoi));
           txt_Matkhau.setText("");
            RoleDAO daorole = new RoleDAO();
            List <String> roleName = daorole.getRoleNames();

            combobox_Vaitro.removeAllItems();
            for (String role : roleName){
                combobox_Vaitro.addItem(role);
        }
           combobox_Trangthai.setSelectedItem("Hoạt động");

           txt_Matkhau.setEditable(true);
           combobox_Trangthai.setEnabled(false);

           txt_Matkhau.requestFocus();
           
           btnCapnhat.setEnabled(false);
           btnXoa.setEnabled(false);
           btnLuu.setEnabled(true);
           btnHuy.setEnabled(true);
           btnLammoiTT.setEnabled(false);
           
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnThemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnThemMouseClicked

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        // TODO add your handling code here:
        SearchFilter();     
    }//GEN-LAST:event_btnTimActionPerformed

    private void btnCapnhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapnhatActionPerformed
        // TODO add your handling code here:
        int selectedRow = Table_Account.getSelectedRow();

        if (selectedRow == -1) {
            log_message("Vui lòng chọn tài khoản để sửa");
            return;
        }
             
        combobox_Trangthai.removeAllItems();
        combobox_Trangthai.addItem("Hoạt động");
        combobox_Trangthai.addItem("Không hoạt động");
        
        txt_Taikhoan.setText(Table_Account.getValueAt(selectedRow, 0).toString());         
        combobox_Vaitro.setSelectedItem(Table_Account.getValueAt(selectedRow, 1).toString());          
        String status = Table_Account.getValueAt(selectedRow, 2).toString().trim();      
        combobox_Trangthai.setSelectedItem(status);
        
        isUpdating = true;
        btnThem.setEnabled(false);
        btnXoa.setEnabled(false);
        btnLuu.setEnabled(true);
        btnHuy.setEnabled(true);
        btnLammoiTT.setEnabled(true);
        
    }//GEN-LAST:event_btnCapnhatActionPerformed

    private void btnCapnhatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCapnhatMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCapnhatMouseClicked

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        // TODO add your handling code here:
        log_comfirm("Bạn có muốn hủy không?");
    }//GEN-LAST:event_btnHuyActionPerformed

    private void btnHuyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHuyMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHuyMouseClicked

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        String accountNumText = txt_Taikhoan.getText().trim();
        String password = txt_Matkhau.getText().trim();
        String roleText = combobox_Vaitro.getSelectedItem().toString().trim();
        String statusText = combobox_Trangthai.getSelectedItem().toString().trim();

        if (accountNumText.isEmpty() || roleText.isEmpty() || statusText.isEmpty()) {
            log_message("Vui lòng điền đầy đủ thông tin!");
            return;
        }

        int accountNum = Integer.parseInt(accountNumText);
        boolean isActive = statusText.equals("Hoạt động");
        
        int roleId = RoleDAO.getInstance().getRoleIdByName(roleText);
        
        if (roleId == 0) {
            log_message("Vai trò không hợp lệ!");
            return;
        }

        Account acc;
        if (isUpdating) {
            // Sửa
            acc = new Account(accountNum, null, isActive, roleId); 
            boolean success = AccountDAO.getInstance().update(acc);
            if (success) {
                log_message("Cập nhật thành công!");
                ResetThongTin();
                btnThem.setEnabled(true);
                btnXoa.setEnabled(true);
            } else {
                log_message("Cập nhật thất bại!");
            }
            isUpdating = false;
        } else {
            // Thêm 
            if (password.isEmpty()) {
                log_message("Vui lòng nhập mật khẩu!");
                return;
            }
            String hashedPassword = HashUtil.toSHA256(password);
            acc = new Account(accountNum, hashedPassword, isActive, roleId);
            boolean success = AccountDAO.getInstance().insert(acc);
            if (success) {
                log_message("Thêm thành công!, Hãy thêm thông tin");
                ResetThongTin();
                btnCapnhat.setEnabled(true);
                btnXoa.setEnabled(true);
            } else {
                log_message("Thêm thất bại!");
            }
        }
        loadTable();
        ResetThongTin();
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnLuuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLuuMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLuuMouseClicked

    private void Combobox_TrangthaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Combobox_TrangthaiActionPerformed
        // TODO add your handling code here:
        SearchFilter();
    }//GEN-LAST:event_Combobox_TrangthaiActionPerformed

    private void btnloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnloadActionPerformed
        // TODO add your handling code here:
        loadTable();
    }//GEN-LAST:event_btnloadActionPerformed

        private void SearchFilter() {
        String keyword = txt_Timkiem.getText().trim(); 
        String selectedViTri = Combobox_Trangthai.getSelectedItem().toString(); 

        DefaultTableModel model = (DefaultTableModel) Table_Account.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        Table_Account.setRowSorter(sorter);

        List<RowFilter<Object, Object>> filters = new ArrayList<>();

        if (!keyword.isEmpty()) {
            RowFilter<Object, Object> keywordFilter = RowFilter.regexFilter("(?i)" + keyword, 0);
            filters.add(keywordFilter);
        }

        if (!selectedViTri.equalsIgnoreCase("Tất cả")) {
            RowFilter<Object, Object> viTriFilter = RowFilter.regexFilter("(?i)^" + selectedViTri + "$", 2); 
            filters.add(viTriFilter);
        }

        if (filters.isEmpty()) {
            sorter.setRowFilter(null); 
        } else {
            sorter.setRowFilter(RowFilter.andFilter(filters)); 
        }
    }
    
    private void log_message(String message) {
    this.viewmain.setEnabled(false);
    this.logMessage = new LogMessage(message) {
        @Override
        public void action() {
            this.setVisible(false);
            viewmain.setEnabled(true);
            viewmain.requestFocus();
        }
    };
    logMessage.setLocationRelativeTo(null);
    this.logMessage.setVisible(true);
}
    
    private void log_comfirm(String message) {
        this.viewmain.setEnabled(false);

        this.logConfirm = new LogConfirm(message) {
        @Override
        public void action() {
            this.setVisible(false);
            viewmain.setEnabled(true);
            viewmain.requestFocus();
            ResetThongTin();
            btnCapnhat.setEnabled(true);
            btnThem.setEnabled(true);
            btnXoa.setEnabled(true);
            btnLuu.setEnabled(false);
            btnHuy.setEnabled(false);
            btnLammoiTT.setEnabled(true);
        }

        @Override
        public void reject() {
            this.setVisible(false);
            viewmain.setEnabled(true);
            viewmain.requestFocus();
        }
    };
    logConfirm.setLocationRelativeTo(null);
    this.logConfirm.setVisible(true);
    }
    
    private void loadTable() {
        DefaultTableModel model = (DefaultTableModel) Table_Account.getModel();
        model.setRowCount(0); 

        ArrayList<Account> accountList = AccountDAO.getInstance().getList();
        for (Account account : accountList) {
            String roleName = RoleDAO.getInstance().getRoleNameById(account.getRoleId());
            String status = account.isActive() ? "Hoạt động" : "Không hoạt động";

            model.addRow(new Object[] {
                account.getAccountNumber(),
                roleName,
                status
            });
        }
    }

    public class HashUtil {
    public static String toSHA256(String input) {
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            byte[] hashBytes = md.digest(input.getBytes("UTF-8"));
            StringBuilder sb = new StringBuilder();
            for (byte b : hashBytes) {
                sb.append(String.format("%02x", b));
            }
            return sb.toString();
        } catch (Exception e) {
            throw new RuntimeException("Lỗi mã hóa SHA-256", e);
        }
    }
}
        
    private void ResetThongTin(){
        txt_Taikhoan.setText("");
        txt_Matkhau.setText("");
        combobox_Vaitro.setSelectedIndex(-1);
        combobox_Trangthai.setSelectedIndex(-1);
    }
    
    

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Combobox_Trangthai;
    private javax.swing.JPanel Panel_DS;
    private javax.swing.JPanel Panel_TKCN;
    private javax.swing.JPanel Panel_TKCN1;
    private javax.swing.JPanel Panel_TT;
    private javax.swing.JTable Table_Account;
    private javax.swing.JButton btnCapnhat;
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnLammoi;
    private javax.swing.JButton btnLammoiTT;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnload;
    private javax.swing.JComboBox<String> combobox_Trangthai;
    private javax.swing.JComboBox<String> combobox_Vaitro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txt_Matkhau;
    private javax.swing.JTextField txt_Taikhoan;
    private javax.swing.JTextField txt_Timkiem;
    // End of variables declaration//GEN-END:variables
}
