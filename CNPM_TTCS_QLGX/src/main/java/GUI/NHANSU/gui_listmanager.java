/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.NHANSU;

import DatabaseHelper.OpenConnection;
import GUI.ViewMain;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author eramisme
 */
public class gui_listmanager extends javax.swing.JPanel {
    
    private DefaultTableModel tableModel;
    private ViewMain viewmain;

    /**
     * Creates new form gui_manager
     */
    public gui_listmanager(ViewMain viewmain) {
        this.viewmain = viewmain;
//        this.logConfirm = logConfirm;
//        this.logMessage = logMessage;
        
        initComponents();       
        tableModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
        }
        };
        initTable();
        fillTable();
    }    
    public void initTable() {
        String[] header = new String[] {"ID Quản lý", "Họ tên", "Vai trò"};
        tableModel.setColumnIdentifiers(header);
        Table_Manager.setModel(tableModel);
    }
    
    public void fillTable() {
    String sql = "EXEC Manager_render";  // Make sure this matches the updated procedure
    try (
        Connection conn = OpenConnection.getConnection();
        Statement stmt = conn.createStatement();
        ResultSet result = stmt.executeQuery(sql);
    ) {
        tableModel.setRowCount(0);  // Clear any existing rows
        while (result.next()) {
            int manager_id = result.getInt("manager_id");
            String manager_name = result.getString("manager_name");
            String manager_role = result.getString("manager_role");
            
            
            
            // Add a row with manager's information and permissions
            tableModel.addRow(new Object[]{
                manager_id,
                manager_name,
                manager_role,
                
            });
        }
        tableModel.fireTableDataChanged();  // Notify the table model that the data has changed
    } catch (SQLException e) {
        e.printStackTrace();  // Handle any SQL exceptions
    }
}
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel_DS = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table_Manager = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        txt_Timkiem = new javax.swing.JTextField();
        btnLammoiTK = new javax.swing.JButton();
        btnTim = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 255));

        Panel_DS.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("DANH SÁCH QUẢN LÝ");

        Table_Manager.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID Quản lý", "Họ tên quản lý"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Table_Manager);

        javax.swing.GroupLayout Panel_DSLayout = new javax.swing.GroupLayout(Panel_DS);
        Panel_DS.setLayout(Panel_DSLayout);
        Panel_DSLayout.setHorizontalGroup(
            Panel_DSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_DSLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_DSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_DSLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1103, Short.MAX_VALUE))
                .addContainerGap())
        );
        Panel_DSLayout.setVerticalGroup(
            Panel_DSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_DSLayout.createSequentialGroup()
                .addComponent(jLabel11)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnLammoiTK.setText("Làm mới");
        btnLammoiTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLammoiTKActionPerformed(evt);
            }
        });

        btnTim.setText("Tìm");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(txt_Timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTim)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLammoiTK, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLammoiTK, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Panel_DS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Panel_DS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLammoiTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLammoiTKActionPerformed
        // TODO add your handling code here:
        txt_Timkiem.setText(""); // Xoá ô tìm kiếm
        loadTable();
    }//GEN-LAST:event_btnLammoiTKActionPerformed

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
//        // TODO add your handling code here:
        String keyword = txt_Timkiem.getText().trim().toLowerCase();

        DefaultTableModel model = (DefaultTableModel) Table_Manager.getModel();
        DefaultTableModel newModel = new DefaultTableModel(new Object[]{"ID Quản lí", "Họ tên"}, 0);

        for (int i = 0; i < model.getRowCount(); i++) {
            String idquanly = model.getValueAt(i, 0).toString().toLowerCase();
            String tenquanly = model.getValueAt(i, 1).toString().toLowerCase();

            if (idquanly.contains(keyword) || tenquanly.contains(keyword)) {
                newModel.addRow(new Object[]{model.getValueAt(i, 0), model.getValueAt(i, 1)});
            }
        }

        Table_Manager.setModel(newModel);
    }//GEN-LAST:event_btnTimActionPerformed

    
    public void loadTable() {
        
    Table_Manager.setModel(tableModel);
    String sql = "EXEC Manager_render";  // Make sure this matches the updated procedure
    try (
        Connection conn = OpenConnection.getConnection();
        Statement stmt = conn.createStatement();
        ResultSet result = stmt.executeQuery(sql);
    ) {
        tableModel.setRowCount(0);  // Clear any existing rows
        while (result.next()) {
            int manager_id = result.getInt("manager_id");
            String manager_name = result.getString("manager_name");
            String manager_role = result.getString("manager_role");
            
            
            
            // Add a row with manager's information and permissions
            tableModel.addRow(new Object[]{
                manager_id,
                manager_name,
                manager_role,
                
            });
        }
        tableModel.fireTableDataChanged();  // Notify the table model that the data has changed
    } catch (SQLException e) {
        e.printStackTrace();  // Handle any SQL exceptions
    }
 }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel_DS;
    private javax.swing.JTable Table_Manager;
    private javax.swing.JButton btnLammoiTK;
    private javax.swing.JButton btnTim;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txt_Timkiem;
    // End of variables declaration//GEN-END:variables
}
